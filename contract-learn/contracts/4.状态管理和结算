PledgePool.sol 核心逻辑的流程图设计，分为几个关键部分：池子创建、出借流程、借款流程、状态管理和结算。

//展示池子状态的流转和结算、清算逻辑。
//池子从 MATCH 开始，经过 settle 进入 EXECUTION，最后通过 finish 或 liquidate 结束。
//预言机和 Uniswap 交互是关键步骤，影响结算和清算结果。



[开始]
   ↓
[池子状态: MATCH]
   ↓
[管理员调用 settle]
   ↓
[时间 > settleTime 且状态为 MATCH?] → [否] → [结束 (抛出错误)]
   ↓
[是]
   ↓
[lendSupply > 0 且 borrowSupply > 0?] → [否] → [状态变为 UNDONE] → [结束]
   ↓
[是]
   ↓
[获取预言机价格 (BscPledgeOracle.getPrices)]
   ↓
[计算抵押品价值 (borrowSupply * 价格比例)]
   ↓
[确定 settleAmountLend 和 settleAmountBorrow]
   ↓
[状态变为 EXECUTION]
   ↓
[触发 StateChange 事件]
   ↓
[等待时间 > endTime 或触发清算]
   ↓
[检查清算条件 (checkoutLiquidate)] → [是] → [管理员调用 liquidate]
   ↓                                            ↓
[否]                                         [计算利息和卖出金额]
   ↓                                            ↓
[管理员调用 finish]                          [通过 Uniswap 交换 (borrowToken -> lendToken)]
   ↓                                            ↓
[时间 > endTime 且状态为 EXECUTION?] → [否] → [结束 (抛出错误)]
   ↓                                            [提取费用 (SafeTransfer._redeem)]
[是]                                          ↓
   ↓                                            [更新 liquidationAmounLend 和 liquidationAmounBorrow]
[计算利息 (interestRate * settleAmountLend)] ↓
   ↓                                            [状态变为 LIQUIDATION]
[计算卖出金额 (lendAmount * (1 + lendFee))]  ↓
   ↓                                            [触发 StateChange 事件]
[通过 Uniswap 交换 (borrowToken -> lendToken)] ←
   ↓
[提取费用 (SafeTransfer._redeem)]
   ↓
[更新 finishAmountLend 和 finishAmountBorrow]
   ↓
[状态变为 FINISH]
   ↓
[触发 StateChange 事件]
   ↓
[结束]